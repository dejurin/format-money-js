"use strict";Object.defineProperty(exports,"__esModule",{value:!0}),exports.FormatMoney=void 0;class FormatMoney{constructor(t){this.options=t,this.version="1.3.3",this.defaults={grouping:!0,separator:",",decimalPoint:".",decimals:0,symbol:"",append:!1},this.from=((t,e,s=!1)=>{const o=Object.assign(Object.assign({},this.options),e);if("string"==typeof t)return t;const i=t<0?"-":"";let n,a,r,l,c,p,m;if(n=Math.abs(t).toFixed(o.decimals),r=(a=(n+="").split("."))[0],l=a.length>1?o.decimalPoint+a[1]:"",o.grouping){c="";for(let t=0,e=r.length;t<e;t+=1)0!==t&&t%3==0&&(c=o.separator+c),c=r[e-t-1]+c;r=c}return p=m="",o.append?m=o.symbol:p=o.symbol,s?{negative:t<0,amount:r,decimals:l,symbol:o.symbol}:i+p+r+l+m}),this.un=((t,e)=>{const s=Object.assign(Object.assign({},this.options),e),o=t||0;if("number"==typeof o)return o;const i=new RegExp(`[^0-9-${s.decimalPoint}]`,"g"),n=parseFloat(o.replace(/\((?=\d+)(.*)\)/,"-$1").replace(i,"").replace(`${s.decimalPoint}`,"."));return isNaN(n)?0:n}),this.options=Object.assign(Object.assign({},this.defaults),t)}}exports.FormatMoney=FormatMoney;